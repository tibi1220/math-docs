name: Build root files and exercises
on: [push]

jobs:
  generate-scripts:
    name: Generate compile scripts
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get cache directories
        id: cache-dirs
        run: |
          echo "PNPM=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-dirs.outputs.PNPM }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install pnpm deps
        run: pnpm install

      - name: Generate scripts
        run: pnpm run generate

      - name: Upload build scripts
        uses: actions/upload-artifact@v3
        with:
          name: generate
          path: generate/
          if-no-files-found: error

  build-standalone:
    name: Compile standalone files
    runs-on: ubuntu-latest
    permissions: write-all
    needs: generate-scripts
    container:
      image: danteev/texlive:latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y-%m-%d--%H-%M-%S")" >> $GITHUB_OUTPUT

      - name: Get build scripts
        uses: actions/download-artifact@v3
        with:
          name: generate
          path: generate/

      - name: Setup standalone file cache
        uses: actions/cache@v3
        with:
          key:
            ${{ runner.os }}-LaTeX-standalone-${{ steps.get-date.outputs.date }}
          path: |
            /usr/local/texlive/2023/texmf-var/luatex-cache/
            exercise
            graphics
          restore-keys: |
            ${{ runner.os }}-LaTeX-standalone-

      - name: Link cls and sty files
        run: ./link.sh

      - name: Install dependencies
        run: |
          chmod +x ./generate/standalone-deps.sh
          ./generate/standalone-deps.sh

      - name: Compile documents
        run: |
          chmod +x ./generate/standalone-compile.sh
          ./generate/standalone-compile.sh

      - name: Upload standalone documents and logs
        uses: actions/upload-artifact@v3
        with:
          name: LaTeX-standalone
          path: |
            exercise/**/build/*.pdf
            exercise/**/build/*.log
            graphics/**/build/*.pdf
            graphics/**/build/*.log

  build_root:
    name: Compile root files
    runs-on: ubuntu-latest
    permissions: write-all
    needs: generate-scripts
    container:
      image: danteev/texlive:latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y-%m-%d--%H-%M-%S")" >> $GITHUB_OUTPUT

      - name: Get build scripts
        uses: actions/download-artifact@v3
        with:
          name: generate
          path: generate/

      - name: Setup root file cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-LaTeX-root-${{ steps.get-date.outputs.date }}
          path: |
            /usr/local/texlive/2023/texmf-var/luatex-cache/
            book
            handout
          restore-keys: |
            ${{ runner.os }}-LaTeX-root-

      - name: Link cls and sty files
        run: ./link.sh

      - name: Install dependencies
        run: |
          chmod +x ./generate/root-deps.sh
          ./generate/root-deps.sh

      - name: Compile documents
        run: |
          chmod +x ./generate/root-compile.sh
          ./generate/root-compile.sh

      - name: Upload root documents and logs
        uses: actions/upload-artifact@v3
        with:
          name: LaTeX-root
          path: |
            book/**/build/*.pdf
            book/**/build/*.log
            handout/**/build/*.pdf
            handout/**/build/*.log
